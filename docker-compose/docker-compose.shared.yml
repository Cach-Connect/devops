version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: cach_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/production-http.conf:/etc/nginx/conf.d/production-http.conf:ro
      - ./nginx/conf.d/production-https.conf:/etc/nginx/conf.d/production-https.conf:ro
      - ./nginx/conf.d/staging-http.conf:/etc/nginx/conf.d/staging-http.conf:ro
      - ./nginx/conf.d/staging-https.conf:/etc/nginx/conf.d/staging-https.conf:ro
      - ./nginx/conf.d/sandbox-http.conf:/etc/nginx/conf.d/sandbox-http.conf:ro
      - ./nginx/conf.d/sandbox-https.conf:/etc/nginx/conf.d/sandbox-https.conf:ro
      - ./nginx/conf.d/shared-http.conf:/etc/nginx/conf.d/shared-http.conf:ro
      - ./nginx/conf.d/shared-https.conf:/etc/nginx/conf.d/shared-https.conf:ro
      - ./ssl/letsencrypt:/etc/letsencrypt:ro
      - ./ssl/www:/var/www/certbot:ro
    networks:
      - monitoring_network
      - cach_production_network
      - cach_staging_network
      - cach_sandbox_network
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: cach_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana - Monitoring Dashboard
  grafana:
    image: grafana/grafana:10.0.0
    container_name: cach_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-monitoring.cachconnect.co.ke}
      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN:-monitoring.cachconnect.co.ke}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: cach_loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Promtail - Log Collector
  promtail:
    image: grafana/promtail:2.9.0
    container_name: cach_promtail
    volumes:
      - ./monitoring/promtail/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Alertmanager - Alert Management
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: cach_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://alerts.cachconnect.co.ke'
    networks:
      - monitoring_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: cach_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Cadvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cach_cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot - SSL Certificate Management
  certbot:
    image: certbot/certbot:latest
    container_name: cach_certbot
    volumes:
      - ./ssl/letsencrypt:/etc/letsencrypt
      - ./ssl/www:/var/www/certbot
      - ./scripts/certbot:/scripts:ro
    networks:
      - monitoring_network
    restart: "no"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  monitoring_network:
    driver: bridge
    name: cach_monitoring_network
  cach_production_network:
    driver: bridge
    name: cach_production_network
  cach_staging_network:
    driver: bridge
    name: cach_staging_network
  cach_sandbox_network:
    driver: bridge
    name: cach_sandbox_network
