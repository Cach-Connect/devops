version: '3.8'

services:
  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: cach_grafana_shared
    ports:
      - "3090:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_DOMAIN=monitoring.cachconnect.co.ke
      - GF_SERVER_ROOT_URL=https://monitoring.cachconnect.co.ke
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    volumes:
      - grafana_shared_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - cach_shared_network
    restart: unless-stopped
    user: "472"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Loki for Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: cach_loki_shared
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_shared_data:/tmp/loki
    networks:
      - cach_shared_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Promtail for Log Collection
  promtail:
    image: grafana/promtail:latest
    container_name: cach_promtail_shared
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - cach_shared_network
      - cach_production_network
      - cach_staging_network
      - cach_sandbox_network
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: cach_prometheus_shared
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_shared_data:/prometheus
    networks:
      - cach_shared_network
      - cach_production_network
      - cach_staging_network
      - cach_sandbox_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: cach_node_exporter_shared
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - cach_shared_network
    restart: unless-stopped

  # cAdvisor for Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cach_cadvisor_shared
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - cach_shared_network
    restart: unless-stopped

  # AlertManager for Alert Management
  alertmanager:
    image: prom/alertmanager:latest
    container_name: cach_alertmanager_shared
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_shared_data:/alertmanager
    networks:
      - cach_shared_network
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'

volumes:
  grafana_shared_data:
    driver: local
  loki_shared_data:
    driver: local
  prometheus_shared_data:
    driver: local
  alertmanager_shared_data:
    driver: local

networks:
  cach_shared_network:
    driver: bridge
  cach_production_network:
    external: true
  cach_staging_network:
    external: true
  cach_sandbox_network:
    external: true