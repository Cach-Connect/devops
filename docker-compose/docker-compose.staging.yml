version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cach_postgres_staging
    environment:
      POSTGRES_DB: cach_db_staging
      POSTGRES_USER: cach_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    networks:
      - cach_staging_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cach_user -d cach_db_staging"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: cach_minio_staging
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_staging_data:/data
    ports:
      - "9010:9000"
      - "9011:9001"
    networks:
      - cach_staging_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # API Service
  api:
    image: abc254/cach-api:staging
    container_name: cach_api_staging
    environment:
      - ENVIRONMENT=staging
      - NODE_ENV=staging
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=${MINIO_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Admin App
  admin:
    image: abc254/cach-admin:staging
    container_name: cach_admin_staging
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Agent App
  agents:
    image: abc254/cach-agent:staging
    container_name: cach_agents_staging
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Distributor App
  distributors:
    image: abc254/cach-distributor:staging
    container_name: cach_distributors_staging
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Business App
  business:
    image: abc254/cach-business:staging
    container_name: cach_business_staging
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Lender App
  lenders:
    image: abc254/cach-lender:staging
    container_name: cach_lenders_staging
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=${API_URL}
    networks:
      - cach_staging_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_staging_data:
    driver: local
  minio_staging_data:
    driver: local

networks:
  cach_staging_network:
    driver: bridge