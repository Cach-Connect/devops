version: '3.8'

# Main orchestrator for all Cach services
# This file coordinates the deployment of all environments and monitoring

services:
  # PostgreSQL Database - Production
  postgres-production:
    image: postgres:15-alpine
    container_name: cach-postgres-production
    restart: unless-stopped
    environment:
      POSTGRES_DB: cach_db_production
      POSTGRES_USER: cach_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_production_data:/var/lib/postgresql/data
    networks:
      - cach-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cach_user -d cach_db_production"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,service=postgres"

  # PostgreSQL Database - Staging
  postgres-staging:
    image: postgres:15-alpine
    container_name: cach-postgres-staging
    restart: unless-stopped
    environment:
      POSTGRES_DB: cach_db_staging
      POSTGRES_USER: cach_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    networks:
      - cach-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cach_user -d cach_db_staging"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,service=postgres"

  # PostgreSQL Database - Sandbox
  postgres-sandbox:
    image: postgres:15-alpine
    container_name: cach-postgres-sandbox
    restart: unless-stopped
    environment:
      POSTGRES_DB: cach_db_sandbox
      POSTGRES_USER: cach_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres_sandbox_data:/var/lib/postgresql/data
    networks:
      - cach-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cach_user -d cach_db_sandbox"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,service=postgres"

  # MinIO Object Storage - Production
  minio-production:
    image: minio/minio:latest
    container_name: cach-minio-production
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_production_data:/data
    networks:
      - cach-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,service=minio"

  # MinIO Object Storage - Staging
  minio-staging:
    image: minio/minio:latest
    container_name: cach-minio-staging
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9002:9000"
      - "9003:9001"
    volumes:
      - minio_staging_data:/data
    networks:
      - cach-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,service=minio"

  # MinIO Object Storage - Sandbox
  minio-sandbox:
    image: minio/minio:latest
    container_name: cach-minio-sandbox
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9004:9000"
      - "9005:9001"
    volumes:
      - minio_sandbox_data:/data
    networks:
      - cach-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,service=minio"
  # Production API
  api-production:
    image: ${API_IMAGE_NAME:-abc254/api-cach-api}:${API_PRODUCTION_TAG:-main}
    container_name: cach-api-production
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-./env/production.env}
    ports:
      - "3001:3001"
    networks:
      - cach-network
    volumes:
      - uploads_production:/app/uploads
    depends_on:
      postgres-production:
        condition: service_healthy
      minio-production:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=api"

  # Staging API
  api-staging:
    image: ${API_IMAGE_NAME:-abc254/api-cach-api}:${API_STAGING_TAG:-Staging}
    container_name: cach-api-staging
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-./env/staging.env}
    ports:
      - "3002:3001"
    networks:
      - cach-network
    volumes:
      - uploads_staging:/app/uploads
    depends_on:
      postgres-staging:
        condition: service_healthy
      minio-staging:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=api"

  # Sandbox API
  api-sandbox:
    image: ${API_IMAGE_NAME:-abc254/api-cach-api}:${API_SANDBOX_TAG:-Sandbox}
    container_name: cach-api-sandbox
    restart: unless-stopped
    env_file:
      - ${ENV_FILE:-./env/sandbox.env}
    ports:
      - "3003:3001"
    networks:
      - cach-network
    volumes:
      - uploads_sandbox:/app/uploads
    depends_on:
      postgres-sandbox:
        condition: service_healthy
      minio-sandbox:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=api"

  # Production Agent App
  agent-production:
    image: ${AGENT_IMAGE_NAME:-abc254/cach-agents}:${AGENT_PRODUCTION_TAG:-main}
    container_name: cach-agents-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://agents.cachconnect.co.ke
    ports:
      - "3011:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=agents"

  # Staging Agent App
  agent-staging:
    image: ${AGENT_IMAGE_NAME:-abc254/cach-agents}:${AGENT_STAGING_TAG:-staging}
    container_name: cach-agents-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=https://api.staging.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://agents.staging.cachconnect.co.ke
    ports:
      - "3012:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=agents"

  # Sandbox Agent App
  agent-sandbox:
    image: ${AGENT_IMAGE_NAME:-abc254/cach-agents}:${AGENT_SANDBOX_TAG:-sandbox}
    container_name: cach-agents-sandbox
    restart: unless-stopped
    environment:
      - NODE_ENV=sandbox
      - NEXT_PUBLIC_API_URL=https://api.sandbox.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://agents.sandbox.cachconnect.co.ke
    ports:
      - "3013:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=agents"

  # Production Distributor App
  distributor-production:
    image: ${DISTRIBUTOR_IMAGE_NAME:-abc254/cach-distributors}:${DISTRIBUTOR_PRODUCTION_TAG:-main}
    container_name: cach-distributors-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://distributors.cachconnect.co.ke
    ports:
      - "3021:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=distributors"

  # Staging Distributor App
  distributor-staging:
    image: ${DISTRIBUTOR_IMAGE_NAME:-abc254/cach-distributors}:${DISTRIBUTOR_STAGING_TAG:-staging}
    container_name: cach-distributors-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=https://api.staging.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://distributors.staging.cachconnect.co.ke
    ports:
      - "3022:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=distributors"

  # Sandbox Distributor App
  distributor-sandbox:
    image: ${DISTRIBUTOR_IMAGE_NAME:-abc254/cach-distributors}:${DISTRIBUTOR_SANDBOX_TAG:-sandbox}
    container_name: cach-distributors-sandbox
    restart: unless-stopped
    environment:
      - NODE_ENV=sandbox
      - NEXT_PUBLIC_API_URL=https://api.sandbox.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://distributors.sandbox.cachconnect.co.ke
    ports:
      - "3023:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=distributors"

  # Production Business App
  business-production:
    image: ${BUSINESS_IMAGE_NAME:-abc254/cach-business}:${BUSINESS_PRODUCTION_TAG:-main}
    container_name: cach-business-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://business.cachconnect.co.ke
    ports:
      - "3031:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=business"

  # Staging Business App
  business-staging:
    image: ${BUSINESS_IMAGE_NAME:-abc254/cach-business}:${BUSINESS_STAGING_TAG:-staging}
    container_name: cach-business-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=https://api.staging.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://business.staging.cachconnect.co.ke
    ports:
      - "3032:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=business"

  # Sandbox Business App
  business-sandbox:
    image: ${BUSINESS_IMAGE_NAME:-abc254/cach-business}:${BUSINESS_SANDBOX_TAG:-sandbox}
    container_name: cach-business-sandbox
    restart: unless-stopped
    environment:
      - NODE_ENV=sandbox
      - NEXT_PUBLIC_API_URL=https://api.sandbox.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://business.sandbox.cachconnect.co.ke
    ports:
      - "3033:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=business"

  # Production Admin App
  admin-production:
    image: ${ADMIN_IMAGE_NAME:-abc254/cach-admin}:${ADMIN_PRODUCTION_TAG:-main}
    container_name: cach-admin-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://admin.cachconnect.co.ke
    ports:
      - "3041:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=admin"

  # Staging Admin App
  admin-staging:
    image: ${ADMIN_IMAGE_NAME:-abc254/cach-admin}:${ADMIN_STAGING_TAG:-staging}
    container_name: cach-admin-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=https://api.staging.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://admin.staging.cachconnect.co.ke
    ports:
      - "3042:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=admin"

  # Sandbox Admin App
  admin-sandbox:
    image: ${ADMIN_IMAGE_NAME:-abc254/cach-admin}:${ADMIN_SANDBOX_TAG:-sandbox}
    container_name: cach-admin-sandbox
    restart: unless-stopped
    environment:
      - NODE_ENV=sandbox
      - NEXT_PUBLIC_API_URL=https://api.sandbox.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://admin.sandbox.cachconnect.co.ke
    ports:
      - "3043:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=admin"

  # Production Lender App
  lender-production:
    image: ${LENDER_IMAGE_NAME:-abc254/cach-lenders}:${LENDER_PRODUCTION_TAG:-main}
    container_name: cach-lenders-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://lenders.cachconnect.co.ke
    ports:
      - "3051:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=production,app=lenders"

  # Staging Lender App
  lender-staging:
    image: ${LENDER_IMAGE_NAME:-abc254/cach-lenders}:${LENDER_STAGING_TAG:-staging}
    container_name: cach-lenders-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - NEXT_PUBLIC_API_URL=https://api.staging.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://lenders.staging.cachconnect.co.ke
    ports:
      - "3052:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=staging,app=lenders"

  # Sandbox Lender App
  lender-sandbox:
    image: ${LENDER_IMAGE_NAME:-abc254/cach-lenders}:${LENDER_SANDBOX_TAG:-sandbox}
    container_name: cach-lenders-sandbox
    restart: unless-stopped
    environment:
      - NODE_ENV=sandbox
      - NEXT_PUBLIC_API_URL=https://api.sandbox.cachconnect.co.ke
      - NEXT_PUBLIC_APP_URL=https://lenders.sandbox.cachconnect.co.ke
    ports:
      - "3053:3000"
    networks:
      - cach-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "environment=sandbox,app=lenders"

volumes:
  # PostgreSQL Data
  postgres_production_data:
  postgres_staging_data:
  postgres_sandbox_data:
  
  # MinIO Data
  minio_production_data:
  minio_staging_data:
  minio_sandbox_data:
  
  # Upload Data
  uploads_production:
  uploads_staging:
  uploads_sandbox:

networks:
  cach-network:
    driver: bridge
    external: false